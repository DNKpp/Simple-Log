name: Build & Run Test

on: [push]

jobs:
  build-ubuntu:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: jwlawson/actions-setup-cmake@v1.3
    - uses: seanmiddleditch/gha-setup-ninja@master
    - name: Install GCC-10  and Clang-10 on Linux
      run: |
        sudo apt-get update
        sudo apt install g++-10
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10
        sudo apt install clang-10
    - name: Configure & Build (GCC)
      run: |
        cmake . -Bbuild_gcc -G "Ninja Multi-Config"
        cmake --build build_gcc
    - name: Test (GCC)
      run: 
        cmake --build build_gcc --target test
    - name: Configure & Build (Clang)
      run: |
        cmake . -Bbuild_clang -DCMAKE_C_COMPILER=$(which clang-10) -DCMAKE_CXX_COMPILER=$(which clang++-10)
        cmake --build build_clang
    - name: Test (Clang)
      run:
        cmake --build build_clang --target test

  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: jwlawson/actions-setup-cmake@v1.3

    - name: Configure & Build (MSVC)
      run: |
        cmake . -Bbuild_msvc
        cmake --build build_msvc
    - name: Test
      run:
        cmake --build build_msvc --target RUN_TESTS

    - name: Configure & Build (Clang-Cl)
      run: |
        cmake . -Bbuild_clang-cl -T clangcl
        cmake --build build_clang-cl
    - name: Test (Clang-Cl)
      run:
        cmake --build build_clang-cl --target RUN_TESTS

#  build-macOS:
#    runs-on: macos-latest
#    steps:
#    - uses: actions/checkout@v2
#    - uses: jwlawson/actions-setup-cmake@v1.3
#    - uses: seanmiddleditch/gha-setup-ninja@master
#    - name: Configure & Build (AppleClang)
#      run: |
#        cmake . -Bbuild_apple_clang -G "Ninja Multi-Config"
#        cmake --build build_apple_clang
#    - name: Test (AppleClang)
#      run: 
#        cmake --build build_apple_clang --target test
